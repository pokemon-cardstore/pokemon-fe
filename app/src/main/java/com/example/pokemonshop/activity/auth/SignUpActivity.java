package com.example.pokemonshop.activity.auth;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.example.pokemonshop.R;
import com.example.pokemonshop.api.auth.AuthRepository;
import com.example.pokemonshop.api.auth.AuthService;
import com.example.pokemonshop.model.Customer;
import com.example.pokemonshop.model.RegisterDto;
import com.google.gson.Gson;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class SignUpActivity extends AppCompatActivity {

    private EditText edtU; // √¥ nh·∫≠p email
    private EditText edtP; // √¥ nh·∫≠p m·∫≠t kh·∫©u
    private EditText edtCP; // √¥ nh·∫≠p x√°c nh·∫≠n m·∫≠t kh·∫©u
    private TextView tvAA; // TextView ƒë·ªÉ chuy·ªÉn ƒë·∫øn m√†n h√¨nh ƒëƒÉng nh·∫≠p
    private Button btnSU; // n√∫t ƒëƒÉng k√Ω
    private final String REQUIRE = "Kh√¥ng ƒë·ªÉ tr·ªëng"; // Chu·ªói th√¥ng b√°o cho c√°c √¥ nh·∫≠p li·ªáu

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this); //hi·ªÉn th·ªã to√†n m√†n h√¨nh, bao g·ªìm c·∫£ c√°c v√πng g·∫ßn c·∫°nh m√†n h√¨nh
        setContentView(R.layout.activity_sign_up);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
        edtU = findViewById(R.id.editEmail);
        edtP = findViewById(R.id.editPassword);
        edtCP = findViewById(R.id.editConfirmP);
        tvAA = findViewById(R.id.tvAA);
        btnSU = findViewById(R.id.btnSignUp);

        tvAA.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(SignUpActivity.this, LoginActivity.class);
                startActivity(intent);
            }
        });
        btnSU.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String email = edtU.getText().toString();
                String password = edtP.getText().toString();
                signup(email, password);
            }
        });

    }

    private void signup(String email, String password) {
        if (!checkInput()) return;

        AuthService authService = AuthRepository.getAuthService();

        String confirmPassword = edtCP.getText().toString();
        String username = email.split("@")[0];

        RegisterDto dto = new RegisterDto(username, email, password, confirmPassword);

        // üí• Log JSON g·ª≠i ƒëi
        Log.d("DTO_JSON", new Gson().toJson(dto));

        Call<Void> call = authService.register(dto);

        call.enqueue(new Callback<Void>() {
            @Override
            public void onResponse(Call<Void> call, Response<Void> response) {
                if (response.isSuccessful()) {
                    new AlertDialog.Builder(SignUpActivity.this)
                            .setTitle("ƒêƒÉng k√Ω th√†nh c√¥ng")
                            .setMessage("üéâ Vui l√≤ng ki·ªÉm tra email ƒë·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n tr∆∞·ªõc khi ƒëƒÉng nh·∫≠p.")
                            .setPositiveButton("ƒêƒÉng nh·∫≠p", (dialog, which) -> {
                                Intent intent = new Intent(SignUpActivity.this, LoginActivity.class);
                                startActivity(intent);
                                finish();
                            })
                            .setCancelable(false)
                            .show();
                } else {
                    Toast.makeText(SignUpActivity.this, "ƒêƒÉng k√Ω th·∫•t b·∫°i: " + response.code(), Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onFailure(Call<Void> call, Throwable t) {
                Toast.makeText(SignUpActivity.this, "L·ªói: " + t.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
    }



    private boolean checkInput() {
        String email = edtU.getText().toString().trim();
        String password = edtP.getText().toString().trim();
        String confirmPassword = edtCP.getText().toString().trim();

        if (TextUtils.isEmpty(email)) {
            edtU.setError("Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
            return false;
        }

        if (!email.endsWith("@gmail.com") && !email.endsWith("@fpt.edu.vn")) {
            edtU.setError("Email ph·∫£i c√≥ ƒëu√¥i @gmail.com ho·∫∑c @fpt.edu.vn");
            return false;
        }

        if (TextUtils.isEmpty(password)) {
            edtP.setError("M·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
            return false;
        }

        if (password.length() < 6) {
            edtP.setError("M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±");
            return false;
        }

        if (TextUtils.isEmpty(confirmPassword)) {
            edtCP.setError("X√°c nh·∫≠n m·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
            return false;
        }

        if (!password.equals(confirmPassword)) {
            edtCP.setError("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp");
            Toast.makeText(this, "M·∫≠t kh·∫©u kh√¥ng tr√πng nhau", Toast.LENGTH_LONG).show();
            return false;
        }

        return true;
    }

}
